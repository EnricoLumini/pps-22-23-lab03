[0m[[0m[0mdebug[0m] [0m[0mCreated transactional ClassFileManager with tempDir = /home/gianluca/Programming/IdeaProjects/pps-22-23-lab03/target/scala-3.2.2/classes.bak[0m
[0m[[0m[0mdebug[0m] [0m[0mAbout to delete class files:[0m
[0m[[0m[0mdebug[0m] [0m[0mWe backup class files:[0m
[0m[[0m[0mdebug[0m] [0m[0mRegistering generated classes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$9.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$IntList$Cons.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists$List$Cons$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$22.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists$List$Cons.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Values$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams$Stream$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists$List$Nil$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$Person$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$19.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees$Tree$Branch.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup3.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$WeekDay$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup2.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$IntList.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$28.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists$List$Nil$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists$List$Cons$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$27.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lazyness$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$WeekDay$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees$Tree$Branch$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousFunctions.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$16.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Currying$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CaseMatch.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$31.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$Person$Teacher.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$30.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ProductTypes$Point2D$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams$Stream$Empty.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Indentation.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals$Option.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals$Option$None.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$14.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees$Tree.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$L.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$Person$Teacher$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$34.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$8.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Values.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$23.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees$Tree$Leaf.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees$Tree$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists$List$Cons.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists$List$Nil.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$3.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists$List$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ProductTypes.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$10.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$21.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$IntList$$anon$2.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	DefinedFunctions.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$5.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$12.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals$Option$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup2$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists$List.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup1$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules$Person$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$32.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$24.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$17.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousFunctions$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists$List$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams$Stream$Cons$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$25.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$18.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams$Stream.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$33.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules$Person$Student.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$15.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$20.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lazyness.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$35.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$6.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$Person$Student.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$IntList$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals$Option$None$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	DefinedFunctions$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules$Person$Teacher$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ProductTypes$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$13.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$Person.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CaseMatch$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams$Stream$Empty$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$WeekDay.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams$Stream$Cons.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$IntList$Cons$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals$Option$Some.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$26.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup4.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$11.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ProductTypes$Point2D.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Currying.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules$Person$Teacher.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup4$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists$List$Nil.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists$List.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules$Person.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup3$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$Person$Student$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Indentation$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$7.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules$Person$Student$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals$Option$Some$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$2.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$4.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees$Tree$Leaf$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$29.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$9.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$IntList$Cons.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists$List$Cons$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$22.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists$List$Cons.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Values$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams$Stream$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists$List$Nil$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$Person$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$19.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees$Tree$Branch.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup3.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$WeekDay$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup2.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$IntList.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$28.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists$List$Nil$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists$List$Cons$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$27.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lazyness$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$WeekDay$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees$Tree$Branch$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousFunctions.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$16.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Currying$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	CaseMatch.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$31.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$Person$Teacher.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$30.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	ProductTypes$Point2D$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams$Stream$Empty.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Indentation.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals$Option.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals$Option$None.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$14.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees$Tree.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$L.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$Person$Teacher$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$34.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$8.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Values.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$23.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees$Tree$Leaf.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees$Tree$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists$List$Cons.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists$List$Nil.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$3.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists$List$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	ProductTypes.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$10.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$21.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$IntList$$anon$2.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	DefinedFunctions.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$5.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$12.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals$Option$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup2$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists$List.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup1$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules$Person$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$32.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$24.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$17.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousFunctions$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists$List$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams$Stream$Cons$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$25.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$18.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams$Stream.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$33.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules$Person$Student.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$15.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$20.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lazyness.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$35.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$6.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$Person$Student.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$IntList$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals$Option$None$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	DefinedFunctions$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules$Person$Teacher$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	ProductTypes$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$13.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$Person.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	CaseMatch$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams$Stream$Empty$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$WeekDay.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	EncapsulatedLists$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams$Stream$Cons.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$IntList$Cons$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Streams$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals$Option$Some.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$26.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup4.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$11.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	ProductTypes$Point2D.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Currying.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules$Person$Teacher.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup4$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists$List$Nil.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lists$List.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules$Person.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tuples$Tup3$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgebraicDataTypes$Person$Student$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Indentation$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$7.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules$Person$Student$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Optionals$Option$Some$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$2.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$4.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Modules.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	BTrees$Tree$Leaf$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lambda$$anon$29.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0mRemoving the temporary directory used for backing up class files: /home/gianluca/Programming/IdeaProjects/pps-22-23-lab03/target/scala-3.2.2/classes.bak[0m
